#!/usr/bin/env python
import os
import sys
import django

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'msu_portal.settings')
django.setup()

from main.models import CustomUser, Group
from schedule.models import Subject, Schedule


def cleanup_duplicates():
    """–£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã –≥—Ä—É–ø–ø"""
    print("üßπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≥—Ä—É–ø–ø...")

    # –ù–∞—Ö–æ–¥–∏–º –≥—Ä—É–ø–ø—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    from django.db.models import Count
    duplicates = Group.objects.values('name').annotate(
        count=Count('id')
    ).filter(count__gt=1)

    for item in duplicates:
        group_name = item['name']
        groups = Group.objects.filter(name=group_name)
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø —Å –∏–º–µ–Ω–µ–º '{group_name}'")

        # –û—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É, —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        keep_group = groups.first()
        deleted_count = groups.exclude(id=keep_group.id).delete()[0]
        print(f"–£–¥–∞–ª–µ–Ω–æ {deleted_count} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≥—Ä—É–ø–ø—ã '{group_name}'")

    return len(duplicates)


def create_test_schedule():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")

    # –û—á–∏—â–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    cleanup_duplicates()

    # 1. –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
    teacher, created = CustomUser.objects.get_or_create(
        username='teacher1',
        defaults={
            'student_id': 't0001',
            'first_name': '–°–µ—Ä–≥–µ–π',
            'last_name': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–≤',
            'faculty': '–í–ú–ö',
            'course': 0,
            'role': 'teacher'
        }
    )
    if created:
        teacher.set_password('teacher123')
        teacher.save()
        print("‚úÖ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
    else:
        print("‚ö†Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # 2. –ü—Ä–µ–¥–º–µ—Ç
    subject, created = Subject.objects.get_or_create(
        name='–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
        teacher=teacher
    )
    print("‚úÖ –ü—Ä–µ–¥–º–µ—Ç —Å–æ–∑–¥–∞–Ω" if created else "‚ö†Ô∏è –ü—Ä–µ–¥–º–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # 3. –ì—Ä—É–ø–ø–∞ (–ë–ï–ó–û–ü–ê–°–ù–û —Å defaults)
    group, created = Group.objects.get_or_create(
        name='–í–ú–ö-101',
        defaults={
            'faculty': '–í–ú–ö',
            'course': 1
        }
    )
    print("‚úÖ –ì—Ä—É–ø–ø–∞ —Å–æ–∑–¥–∞–Ω–∞" if created else "‚úÖ –ì—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # 4. –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    schedule_data = [
        {'day': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 'number': 1, 'time': '9:00-10:30', 'classroom': '505'},
        {'day': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 'number': 2, 'time': '10:45-12:15', 'classroom': '312'},
        {'day': '–í—Ç–æ—Ä–Ω–∏–∫', 'number': 1, 'time': '9:00-10:30', 'classroom': '411'},
        {'day': '–°—Ä–µ–¥–∞', 'number': 1, 'time': '9:00-10:30', 'classroom': '505'},
    ]

    for data in schedule_data:
        schedule, created = Schedule.objects.get_or_create(
            group=group,
            day=data['day'],
            lesson_number=data['number'],
            teacher_id=teacher.student_id,
            defaults={
                'time': data['time'],
                'subject': subject,
                'classroom': data['classroom']
            }
        )
        status = "—Å–æ–∑–¥–∞–Ω–∞" if created else "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        print(f"‚úÖ –ü–∞—Ä–∞ {data['number']} ({data['day']}) {status}")

    print("üéâ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!")
    print("üë§ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: teacher1 / teacher123")
    print("üìö –ü—Ä–µ–¥–º–µ—Ç: –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("üë• –ì—Ä—É–ø–ø–∞: –í–ú–ö-101")


if __name__ == "__main__":
    create_test_schedule()